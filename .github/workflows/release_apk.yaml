name: Score Tracker New Release

on:
  push:
    tags:
      - 'v*.*.*' 

jobs:
  build_apk:
    name: Score Tracker New Release
    runs-on: ubuntu-latest

    permissions:
      contents: write # This grants write access to repository contents, including releases.

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5' # Specifica la tua versione di Flutter
          channel: 'stable'

      - name: Get Flutter dependencies
        run: flutter pub get

      # Aggiungi questo blocco per configurare la firma
      - name: Decode Keystore
        env:
          SIGNING_KEY_BASE64: ${{ secrets.SIGNING_KEY_BASE64 }}
        run: |
          # Android/app perché il file keystore deve essere accessibile da Gradle
          echo "$SIGNING_KEY_BASE64" | base64 --decode > android/app/upload-keystore.jks

      - name: Create Key Properties
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "storeFile=upload-keystore.jks" > key.properties
          echo "storePassword=$KEY_STORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEY_PASSWORD" >> key.properties
        working-directory: android # Questo è importante per il percorso del key.properties

      - name: Write .env file from secret
        run: |
          mkdir -p dev
          echo "GCP_CREDENTIALS_B64=${{ secrets.GCP_CREDENTIALS_B64 }}" > dev/.env

      - name: Build Android APK (Signed) # Compila l'APK di release firmato
        run: flutter build apk --release

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Nuova release dell'applicazione Flutter.
            APK disponibile per il download.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: score_tracker-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive